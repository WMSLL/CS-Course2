using System;

namespace L04_C15_sw_colors_solution
{
	// Используем short, т.к. цветов больше 9,
	// значит, не влезаем в диапазон byte
	
	// В квадратных скобочках указан атрибут. 
	// Что такое атрибуты , мы пока не изучали. 
	// Но сейчас, достаточно запомнить, что это специальные методанные для типа.
	// Например, если указан атрибут Flags для перечисления, то его методы, такие как ToString()
	// Самостоятельно воспринимают значение перечисления как набор флагов и выводят набор цветов на экран.
	// Если убрать этот атрибут, вместо читаемых надписей в консоли, будет указано просто число. 
	[Flags]
	enum Colors : short
	{
		// Часто используется специальное фиктивное значение (Default/None) равное нулю
		// Далее, каждое значение флага инициализируется с помощью двоичных литералов
		// Никто не запрещает инициализировать значения флагов
		// с помощью шестнадцатеричных литералов (0x01, 0x02, 0x04, 0x08, 0x10 и тд)
		// Или с помощью десятичных цифр (1, 2, 4, 8, 16, 32, 64 и тд)
		// Просто в бинарном виде флаги выглядят нагляднее. С моей точки зрения
		None    = 0b0000000000000000,
		Black   = 0b0000000000000001,
		Blue    = 0b0000000000000010,
		Cyan    = 0b0000000000000100,
		Grey    = 0b0000000000001000,
		Green   = 0b0000000000010000,
		Magenta = 0b0000000000100000,
		Red     = 0b0000000001000000,
		White   = 0b0000000010000000,
		Yellow  = 0b0000000100000000,

		// Еще одно специальное фиктивное значение,
		// которое можно испоьлзовать как комбинацию всех цветов
		All     = 0b0000000111111111
	}

	class Program
	{
		static void Main()
		{
			var favoriteColors = Colors.None;
			var allColors = Colors.All;

			for (var i = 0; i < 4; i++)
			{
				favoriteColors |= ReadColor($"Enter the {i + 1} favorite color: ");
			}

			Console.WriteLine($"Favorite colors: {favoriteColors}");
			Console.WriteLine($"Reminder colors: {allColors ^ favoriteColors}");
		}

		static Colors ReadColor(string title)
		{
			for (;;)
			{
				Console.Write(title);

				// Про серию методов *.TryParse еще поговорим. 
				// Но вкратце, эти методы возвращают bool, как признак, удалось ли выполнить парсинг
				// А само преобразованное значение передают через аргументы (out variables)
				if (Enum.TryParse(typeof(Colors), Console.ReadLine(), out var color))
				{
					return (Colors) color;
				}

				Console.WriteLine("Wrong value specified!");
			}
		}
	}
}